--- dart/build/toolchain/linux/BUILD.gn	2019-03-23 14:09:32.007145072 +0100
+++ dart/build/toolchain/linux/BUILD.gn	2019-03-23 14:17:58.449339976 +0100
@@ -9,6 +9,7 @@
 
 declare_args() {
   toolchain_prefix = ""
+  llvm_prefix = ""
   # TODO(zra): Add an argument for overriding the host toolchain.
 }
 
@@ -126,15 +127,14 @@
 }
 
 gcc_toolchain("clang_x64") {
-  prefix = rebase_path("//buildtools/linux-x64/clang/bin", root_build_dir)
-  cc = "${compiler_prefix}${prefix}/clang"
-  cxx = "${compiler_prefix}${prefix}/clang++"
+  cc = "${llvm_prefix}/bin/clang"
+  cxx = "${llvm_prefix}/bin/clang++"
 
-  readelf = "${prefix}/llvm-readelf"
-  nm = "${prefix}/llvm-nm"
-  ar = "${prefix}/llvm-ar"
+  readelf = "${llvm_prefix}/bin/llvm-readelf"
+  nm = "${llvm_prefix}/bin/llvm-nm"
+  ar = "${llvm_prefix}/bin/llvm-ar"
   ld = cxx
-  llvm_objcopy = "${prefix}/llvm-objcopy"
+  llvm_objcopy = "${llvm_prefix}/bin/llvm-objcopy"
 
   toolchain_cpu = "x64"
   toolchain_os = "linux"
--- dart/build/config/compiler/BUILD.gn	2019-03-23 14:16:40.844214229 +0100
+++ dart/build/config/compiler/BUILD.gn	2019-03-23 14:19:48.026111720 +0100
@@ -347,17 +347,17 @@
   # changes since artifacts from an older version of the toolchain may or may
   # not be compatible with newer ones. To achieve this, we insert a synthetic
   # define into the compile line.
-  if (is_clang && (is_linux || is_mac)) {
-    if (is_linux) {
-      toolchain_stamp_file =
-          "//buildtools/linux-x64/clang/.versions/clang.cipd_version"
-    } else {
-      toolchain_stamp_file =
-          "//buildtools/mac-x64/clang/.versions/clang.cipd_version"
-    }
-    cipd_version = read_file(toolchain_stamp_file, "json")
-    defines = [ "TOOLCHAIN_VERSION=${cipd_version.instance_id}" ]
-  }
+  #if (is_clang && (is_linux || is_mac)) {
+  #  if (is_linux) {
+  #    toolchain_stamp_file =
+  #        "//buildtools/linux-x64/clang/.versions/clang.cipd_version"
+  #  } else {
+  #    toolchain_stamp_file =
+  #        "//buildtools/mac-x64/clang/.versions/clang.cipd_version"
+  #  }
+  #  cipd_version = read_file(toolchain_stamp_file, "json")
+  #  defines = [ "TOOLCHAIN_VERSION=${cipd_version.instance_id}" ]
+  #}
 
   # Assign any flags set for the C compiler to asmflags so that they are sent
   # to the assembler. The Windows assembler takes different types of flags
@@ -711,7 +711,7 @@
     if (is_clang && !using_sanitizer) {
       # Identical code folding to reduce size.
       # Warning: This changes C/C++ semantics of function pointer comparison.
-      common_optimize_on_ldflags += [ "-Wl,--icf=all" ]
+      #common_optimize_on_ldflags += [ "-Wl,--icf=all" ]
     }
 
     if (!using_sanitizer) {
--- a/utils/dartdevc/BUILD.gn
+++ b/utils/dartdevc/BUILD.gn
@@ -19,8 +19,7 @@ application_snapshot("dartdevc") {
     rebase_path("../../sdk"),
     "--dart-sdk-summary",
     rebase_path(sdk_summary),
-    "--library-root",
-    rebase_path("../../pkg/dev_compiler"),
+    "-k",
     "-o",
     "dartdevc.js",
     rebase_path("../../pkg/dev_compiler/bin/dartdevc.dart"),
@@ -347,6 +346,6 @@ prebuilt_dart_action("dartdevc_kernel_sdk") {
     "--output",
     rebase_path(sdk_dill),
     "--libraries",
-    rebase_path("//sdk/lib/libraries.json"),
+    rebase_path("../../sdk/lib/libraries.json"),
   ]
 }

